namespace:
  # namespace of injector
  name: default

injector:
  # When the host application already has JAVA_TOOL_OPTIONS variables, injector injection behavior: before indicates
  # injection before the original variable (default), after indicates injection after the original variable, and
  # ignore indicates that injection is not performed
  action: before
  # Number of injector instances
  replicas: 2
  image:
    # injector image address (Based on the actual scenario)
    addr:
    # Always(always pull), IfNotPresent(default value, local image is used if there is a local image, no pull is used)
    # Never(only local image is used, never pull)
    pullPolicy: IfNotPresent
    # pull secrets
    pullSecrets: default-secret

agent:
  image:
    # agent image address (Based on the actual scenario)
    addr:
    # Always(always pull), IfNotPresent(default value, local image is used if there is a local image, no pull is used)
    # Never(only local image is used, never pull)
    pullPolicy: IfNotPresent

externalAgent:
  # external agent image address (for example: io.sermant/opentelemetry-javaagent:2.10.0)
  imageAddr:
  # external agent file name  (for example: opentelemetry-javaagent.jar)
  fileName:

config:
  # Configuration center type: ZOOKEEPER/KIE/NACOS
  type: ZOOKEEPER
  # Configuration center address
  endpoints: http://localhost:2181

registry:
  # Registration center type: SERVICE_COMB/NACOS
  type: SERVICE_COMB
  # Registration center address
  endpoints: http://localhost:30100

# Supports the configuration of common environment variables for service instances (this configuration takes
# precedence below the configuration of env in yaml if the key is the same)
configMap:
  # Whether to enable configMap injection
  enabled: false
  # The namespace to be injected with configMap, must be the same as that of the service instances
  namespaces: [default]
  # The configuration is as follows:
  # env:
  #   TEST_ENV1: abc
  #   TEST_ENV2: 123456
  env:
